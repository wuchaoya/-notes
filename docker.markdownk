<center>docker</center>
------------------
### Docker 默认账户密码
|用户|密码|进入方式|
|---|----|--------|
|docker|tcuser|ssh|
|root| |command：sudo -i (docker用户下执行)|
### Docker 命令

1. **查看容器的root用户密码**

  ```shell

  docker logs <容器名orID> 2>&1 | grep '^User: ' | tail -n1
  ```
因为Docker容器启动时的root用户的密码是随机分配的,所以，通过这种方式就可以得到redmine容器的root用户的密码了。

2. **查看容器日志**

  ```shell

  docker logs -f <容器名orID>
  ```
3. **查看正在运行的容器**

  ```shell

  docker ps
  docker ps -a为查看所有的容器，包括已经停止的。
  ```
4. **删除所有容器**
    ```shell

    docker rm $(docker ps -a -q)
    ```
5. **停止、启动、杀死一个容器**
    ```shell

    docker stop <容器名orID>
    docker start <容器名orID>
    docker kill <容器名orID>
    ```
6. **查看所有镜像**
    ```shell

    docker images
    ```
7. **删除所有镜像**
    ```shell

    docker rmi $(docker images | grep none | awk '{print $3}' | sort -r)
    ```
8. **运行一个新容器，同时为它命名、端口映射、文件夹映射。以redmine镜像为例**
    ```shell

    docker run --name redmine -p 9003:80 -p 9023:22 -d -v /var/redmine/files:/redmine/files -v /var/redmine/mysql:/var/lib/mysql sameersbn/redmine
    ```
9. **一个容器连接到另一个容器**

    ```shell

    docker run -i -t --name sonar -d -link mmysql:db   tpires/sonar-server  sonar
    ```
10. **拉取镜像**
    ```shell

    docker pull <镜像名:tag>

    ```
11. **当需要把一台机器上的镜像迁移到另一台机器的时候，需要保存镜像与加载镜像。**
    ```shell

    docker save busybox-1 > /home/save.tar
    ```
    使用scp将save.tar拷到机器b上，然后：
    ```shell

    docker load < /home/save.tar
    ```
12. **构建自己的镜像**
    ```shell

    docker build -t <镜像名> <Dockerfile路径>
    ```
13. **重新查看container的stdout**
    ```shell

    # 启动top命令，后台运行
    $ ID=$(sudo docker run -d ubuntu /usr/bin/top -b)
    # 获取正在running的container的输出
    $ sudo docker attach $ID
    top - 02:05:52 up  3:05,  0 users,  load average: 0.01, 0.02, 0.05
    Tasks:   1 total,   1 running,   0 sleeping,   0 stopped,   0 zombie
    Cpu(s):  0.1%us,  0.2%sy,  0.0%ni, 99.7%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
    Mem:    373572k total,   355560k used,    18012k free,    27872k buffers
    Swap:   786428k total,        0k used,   786428k free,   221740k cached
    ^C$
    $ sudo docker stop $ID
    ```
14. **后台运行(-d)、并暴露端口(-p)**
    ```shell

    docker run -d -p 127.0.0.1:33301:22 centos6-ssh
    ```
15. **从Container中拷贝文件出来**
      ```shell

      sudo docker cp 7bb0e258aefe:/etc/debian_version .
      ```

### Docker 容器镜像删除删除不了

1. 停止所有的container，这样才能够删除其中的images：

    <code>docker stop $(docker ps -a -q)</dode>

    如果想要删除所有container的话再加一个指令：

      <code>docker rm $(docker ps -a -q)</code>

2. 查看当前有些什么images

  <code>docker images</code>

3. 删除images，通过image的id来指定删除谁

  <code>docker rmi <image id></code>

  想要删除untagged images，也就是那些id为<None>的image的话可以用

  <code>docker rmi $(docker images | grep "^<none>" | awk "{print $3}")</code>

  要删除全部image的话

  <code>docker rmi $(docker images -q)</code>
